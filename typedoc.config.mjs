/** @type {Partial<import("typedoc").TypeDocOptions>} */
const config = {
  name: 'Validra - Business Rules Engine',
  entryPointStrategy: 'expand',
  entryPoints: ['./src'],
  out: 'docs',
  theme: 'default',
  excludeExternals: false,
  exclude: ['**/*+(.spec|.test|.e2e).ts', '**/tests/**/*'],
  navigation: {
    includeCategories: true,
    includeGroups: true,
    excludeReferences: false,
    includeFolders: true,
    compactFolders: true,
  },
  categorizeByGroup: true,
  cleanOutputDir: true,
  customFooterHtml:
    '<p class="tsd-generator">By <a href="https://github.com/Fmanuel809/validra" target="_blank">Validra</a> | MIT License</p>',
  plugin: ['typedoc-plugin-dt-links', 'typedoc-plugin-coverage', 'typedoc-unhoax-theme'],
  coverageLabel: 'Documentation Coverage',
  coverageOutputType: 'all',
  coverageSvgWidth: 200,
  requiredToBeDocumented: [
    'Enum',
    'EnumMember',
    'Function',
    'Class',
    'Interface',
    'Accessor',
    'TypeAlias',
    'Constructor',
    'Method',
    'Property',
  ],
  validation: {
    invalidLink: false,
    notExported: false,
    notDocumented: false,
    rewrittenLink: false,
    unusedMergeModuleWith: false,
  },
  // Configuración mejorada de tags JSDoc para TypeDoc
  // Incluimos todos los tags que TypeDoc puede no reconocer por defecto
  blockTags: [
    // Tags estándar de JSDoc que TypeDoc debería reconocer
    '@param',
    '@returns',
    '@return',
    '@throws',
    '@throw',
    '@example',
    '@see',
    '@since',
    '@deprecated',
    '@author',
    '@version',
    '@todo',
    '@description',
    '@summary',
    '@default',
    '@override',
    '@virtual',
    '@abstract',
    '@static',
    '@readonly',
    '@async',
    '@generator',
    '@yields',
    '@yield',
    // Tags específicos de TypeScript/TypeDoc
    '@template',
    '@typeParam',
    '@typeparam',
    '@property',
    '@prop',
    '@interface',
    '@implements',
    '@extends',
    '@namespace',
    '@module',
    '@memberof',
    '@inner',
    '@instance',
    '@global',
    '@mixes',
    '@mixins',
    '@constructs',
    '@lends',
    '@borrows',
    '@category',
    '@group',
    '@groupDescription',
    '@fileoverview',
    '@file',
    '@overview',
    '@copyright',
    '@license',
    '@ignore',
    '@internal',
    '@package',
    '@public',
    '@private',
    '@protected',
    '@experimental',
    '@beta',
    '@alpha',
    '@fixme',
    '@remarks',
    '@note',
    '@warning',
    '@attention',
    '@important',
    '@tip',
    '@callback',
    '@event',
    '@fires',
    '@emits',
    '@listens',
    '@external',
    '@host',
    '@augments',
    '@this',
    '@enum',
    '@readonly',
    '@constant',
    '@const',
    '@final',
    '@sealed',
    '@override',
    '@virtual',
    '@abstract',
    '@static',
  ],
  inlineTags: ['@link', '@linkcode', '@linkplain', '@tutorial'],
  modifierTags: [
    '@public',
    '@private',
    '@protected',
    '@readonly',
    '@override',
    '@abstract',
    '@static',
    '@deprecated',
    '@experimental',
    '@beta',
    '@alpha',
    '@internal',
    '@ignore',
    '@final',
    '@sealed',
    '@virtual',
  ],
  // Configuración específica para Validra
  readme: './README.md',
  includeVersion: true,
  searchInComments: true,
  sort: ['source-order'],
  kindSortOrder: [
    'Document',
    'Module',
    'Namespace',
    'Enum',
    'EnumMember',
    'Class',
    'Interface',
    'TypeAlias',
    'Constructor',
    'Property',
    'Method',
    'Function',
    'Variable',
  ],
};

export default config;
